# Generated by Django 2.2.24 on 2021-06-23 08:39

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('client_rfxs', '0002_auto_20210623_0839'),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_name', models.CharField(blank=True, max_length=255, verbose_name='Property Name/Address')),
                ('country', models.CharField(max_length=50, null=True, verbose_name='Country')),
                ('zipcode', models.CharField(max_length=64, null=True, verbose_name='Postal Area')),
                ('state', models.CharField(max_length=255, null=True, verbose_name='Governing District')),
                ('city', models.CharField(max_length=255, null=True, verbose_name='City')),
                ('metropolitan_area', models.CharField(max_length=255, null=True, verbose_name='Metropolitan Area')),
                ('client_site_id', models.CharField(max_length=255, null=True, verbose_name='Client Site ID')),
                ('ownership_type', models.CharField(blank=True, choices=[('LEASED', 'Leased'), ('OWNED', 'Owned')], max_length=20, verbose_name='Ownership Type')),
                ('lease_type', models.CharField(blank=True, choices=[('Full Service Gross', 'Full Service Gross'), ('Modified Gross', 'Modified Gross'), ('Absolute Net', 'Absolute Net'), ('NetNetNet', 'NetNetNet'), ('Owned sites', 'Owned sites'), ('no lease', 'no lease')], max_length=20, verbose_name='Lease Type')),
                ('headcount', models.IntegerField(default=0, verbose_name='Headcount')),
                ('gross_floor_area', models.IntegerField(default=0, verbose_name='Gross Floor Area(SQFT)')),
                ('green_area', models.IntegerField(default=0, verbose_name='Green Area (SQFT)')),
                ('service_level', models.CharField(blank=True, choices=[('Platinum', 'Platinum'), ('Gold', 'Gold'), ('Silver', 'Silver'), ('Bronze', 'Bronze')], max_length=20, verbose_name='Service Level')),
                ('go_live_date', models.DateTimeField(null=True, verbose_name='Go-Live Date')),
                ('is_in_scope_of_pursuit', models.BooleanField(default=False, verbose_name='IN SCOPE OF PURSUIT?')),
                ('days_and_hours_of_operation', django.contrib.postgres.fields.jsonb.JSONField(null=True, verbose_name='Days and Hours of Operation')),
                ('work_shifts', models.IntegerField(default=0, verbose_name='How Many Work Shifts?')),
                ('calculated_headcount', models.IntegerField(default=0, verbose_name='Calculated Headcount')),
            ],
            options={
                'verbose_name': 'Building',
                'verbose_name_plural': 'Buildings',
            },
            bases=(models.Model, utils.fields.MainRegionMixin),
        ),
        migrations.CreateModel(
            name='BuildingFloor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Name')),
                ('floor', models.CharField(blank=True, max_length=255, verbose_name='Floor')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floors', to='buildings.Building')),
            ],
            options={
                'verbose_name': 'BuildingFloor',
                'verbose_name_plural': 'BuildingFloors',
            },
        ),
        migrations.CreateModel(
            name='BuildingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_type', models.CharField(max_length=50, verbose_name='JLL Building Type')),
                ('sqft_per_person', models.IntegerField(default=0, verbose_name='SqFt per person')),
            ],
            options={
                'verbose_name': 'BuildingType',
                'verbose_name_plural': 'BuildingTypes',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Field 1')),
                ('main_region', models.CharField(blank=True, choices=[('APAC', 'APAC'), ('EMEA', 'EMEA'), ('LATAM', 'LATAM'), ('NOAM', 'NOAM')], max_length=5, verbose_name='Main Region')),
                ('sub_region', models.CharField(blank=True, choices=[('ANZ', 'ANZ'), ('N_ASIA', 'North Asia'), ('ISA', 'ISA'), ('ASEAN', 'ASEAN'), ('S_ASIA', 'South Asia'), ('APAC', 'APAC'), ('EMEA', 'EMEA'), ('South', 'South'), ('MEA', 'MEA'), ('DACH', 'DACH'), ('CEE', 'CEE'), ('North', 'North'), ('UK_IE', 'UK & IE'), ('CAR', 'CAR'), ('GLA', 'GLA'), ('NLA', 'NLA'), ('SLA', 'SLA'), ('BRAZIL', 'Brazil'), ('MEXICO', 'Mexico'), ('NOAM', 'NOAM')], max_length=50, verbose_name='Sub Region')),
                ('fx_code', models.CharField(max_length=50, verbose_name='FX Code')),
                ('delivery_model', models.CharField(blank=True, max_length=50, verbose_name='Delivery Model')),
                ('risk_level', models.CharField(blank=True, max_length=50, verbose_name='Risk Level')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='CountryMetropolitanTier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metropolitan_area', models.TextField(verbose_name='Metropolitan Area')),
                ('standard_metropolitan_area', models.TextField(verbose_name='Standardised Metropolitan Area')),
                ('tier', models.CharField(blank=True, max_length=255, verbose_name='Tier')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='metropolitan_tier', to='buildings.Country')),
            ],
            options={
                'verbose_name': 'CountryMetropolitanTier',
                'verbose_name_plural': 'CountryMetropolitanTiers',
            },
        ),
        migrations.CreateModel(
            name='ClientBuildingTypeMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_building_type', models.CharField(max_length=50, verbose_name='Client Building Type')),
                ('building_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_building_types', to='buildings.BuildingType')),
            ],
            options={
                'verbose_name': 'ClientBuildingTypeMapping',
                'verbose_name_plural': 'ClientBuildingTypeMapping',
            },
        ),
        migrations.CreateModel(
            name='BuildingFloorArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Area Name')),
                ('building_floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floor_areas', to='buildings.BuildingFloor')),
            ],
            options={
                'verbose_name': 'BuildingFloorArea',
                'verbose_name_plural': 'BuildingFloorAreas',
            },
        ),
        migrations.AddField(
            model_name='building',
            name='client_building_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='buildings', to='buildings.ClientBuildingTypeMapping'),
        ),
        migrations.AddField(
            model_name='building',
            name='client_rfx',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='building', to='client_rfxs.ClientRfx'),
        ),
        migrations.AddField(
            model_name='building',
            name='metropolitan_tier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buildings', to='buildings.CountryMetropolitanTier'),
        ),
    ]
